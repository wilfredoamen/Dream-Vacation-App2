name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy with SSH and Docker Compose
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          RDS_HOST: ${{ secrets.RDS_HOST }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          RDS_DATABASE: ${{ secrets.RDS_DATABASE }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          # Save SSH key to file
          echo "$EC2_SSH_KEY" > ssh_key
          chmod 600 ssh_key

          # Validate critical variables
          if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$RDS_DATABASE" ]; then
            echo "Missing required environment variables. Exiting."
            exit 1
          fi

          # Copy files to EC2
          scp -i ssh_key -o StrictHostKeyChecking=no docker-compose.yml $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/
          scp -i ssh_key -o StrictHostKeyChecking=no dreamvacations.sql $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/

          # SSH into EC2 and run deployment script
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST <<EOF
            set -e

            # Install MySQL client
            sudo apt-get update -y
            sudo apt-get install -y mysql-client

            # Create database if not exists
            mysql -h \$RDS_HOST -u \$RDS_USERNAME -p\$RDS_PASSWORD <<EOSQL
            CREATE DATABASE IF NOT EXISTS \$RDS_DATABASE;
            USE \$RDS_DATABASE;
            EOSQL

            # Check if DB is empty
            TABLE_COUNT=\$(mysql -h \$RDS_HOST -u \$RDS_USERNAME -p\$RDS_PASSWORD -D \$RDS_DATABASE -e "SHOW TABLES;" | wc -l)
            if [ "\$TABLE_COUNT" -le 1 ]; then
              echo "Database is empty. Importing SQL dump..."
              mysql -h \$RDS_HOST -u \$RDS_USERNAME -p\$RDS_PASSWORD \$RDS_DATABASE < /home/$EC2_USERNAME/dreamvacations.sql
            else
              echo "Database already has tables. Skipping import."
            fi

            # Pull latest Docker images
            echo "Pulling image: \$DOCKERHUB_USERNAME/dream-vacation-backend:latest"
            docker pull \$DOCKERHUB_USERNAME/dream-vacation-backend:latest
            docker pull \$DOCKERHUB_USERNAME/dream-vacation-frontend:latest

            # Start Docker containers
            cd /home/$EC2_USERNAME
            docker-compose down
            docker-compose up -d
            EOF

          # Cleanup
          rm ssh_key
